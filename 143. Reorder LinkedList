/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

//Solution without using any additional memory
class Solution {
    public void reorderList(ListNode head) {
     ListNode slow = head;
     ListNode fast = head.next;

     while(fast != null && fast.next != null){
        slow = slow.next;
        fast = fast.next.next;
     }  

     ListNode second = slow.next;
     ListNode prev = null;
     slow.next = null;
     while(second!=null){
        ListNode tmp = second.next;
        second.next = prev;
        prev = second;
        second = tmp;
     } 

     second = prev;
     ListNode first = head;
     while(second!=null)
     {
        ListNode tmp1 = first.next;
        ListNode tmp2 = second.next;
        first.next = second;
        second.next = tmp1;
        first = tmp1;
        second = tmp2;
     }

    }
}