/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

//Kind of tricky when considering adding value to linkedlist new node and covering all the edge cases

class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       int carry=0,sum=0;
       ListNode result = new ListNode();
       ListNode tmp = result;
       int v1,v2;

       while(l1!=null || l2!=null || carry >0){
        v1 = (l1!=null)? l1.val:0;
        v2 = (l2!=null)? l2.val:0;
        sum = v1+v2+carry;
        carry = sum / 10;
        sum = sum%10;
        tmp.next = new ListNode(sum);
        tmp = tmp.next;

        if(l1!=null)
        {
            l1 = l1.next;
        }
        if(l2!=null)
        {
            l2 = l2.next;
        }
        }
    return result.next;    
    }
}